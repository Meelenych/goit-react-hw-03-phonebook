{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","addContact","nameChange","phoneChange","type","onChange","name","pattern","title","required","onClick","ContactList","contacts","delContact","map","id","phoneNumber","className","Filter","filter","App","state","uuidv4","find","contact","alert","newContact","setState","e","elementToDel","item","target","index","indexOf","splice","value","filterFunc","getFilteredElems","normalizedElem","toLowerCase","elem","includes","localStorage","getItem","console","log","parsedContacts","JSON","parse","length","this","prevProps","prevState","nextContacts","setItem","stringify","filteredContact","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6734b47.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ContactForm = ({ addContact, nameChange, phoneChange }) => {\n\treturn (\n\t\t<>\n\t\t\t<h1>Phonebook</h1>\n\t\t\t<form>\n\t\t\t\t<label>\n\t\t\t\t\tName\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={nameChange}\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n\t\t\t\t\t\ttitle=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\n\t\t\t\t<label>\n\t\t\t\t\tNumber\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\tonChange={phoneChange}\n\t\t\t\t\t\tname=\"number\"\n\t\t\t\t\t\tpattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n\t\t\t\t\t\ttitle=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\n\t\t\t\t<button type=\"button\" onClick={addContact}>\n\t\t\t\t\t{\" \"}\n\t\t\t\t\tAdd Contact\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</>\n\t);\n};\n\nexport default ContactForm;\n","import React from \"react\";\n\nconst ContactList = ({ contacts, delContact }) => {\n\treturn (\n\t\t<>\n\t\t\t<h1>Contacts</h1>\n\t\t\t<ul>\n\t\t\t\t{contacts.map(({ id, name, phoneNumber }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={id}>\n\t\t\t\t\t\t\t{`${name}: ${phoneNumber}`}\n\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={delContact}\n\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tclassName=\"btn\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n\nexport default ContactList;\n","import React from \"react\"\n\nconst Filter = ({filter}) => {\n    return (\n        <>\n            <label>Find contacts by name\n                <input                   \n                    type=\"text\"\n                    onChange={filter}                \n                />\n            </label>\n        </>\n    )\n}\n\nexport default Filter","import \"./App.css\";\nimport { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n\tstate = {\n\t\tcontacts: [\n\t\t\t{ id: uuidv4(), name: \"Rosie Simpson\", phoneNumber: \"459-12-56\" },\n\t\t\t{ id: uuidv4(), name: \"Hermione Kline\", phoneNumber: \"443-89-12\" },\n\t\t\t{ id: uuidv4(), name: \"Eden Clements\", phoneNumber: \"645-17-79\" },\n\t\t\t{ id: uuidv4(), name: \"Annie Copeland\", phoneNumber: \"227-91-26\" },\n\t\t],\n\t\tfilter: \"\",\n\t};\n\n\tcomponentDidMount() {\n\t\tconst contacts = localStorage.getItem(\"contacts\");\n\t\tconsole.log(\"DidMount contacts\", contacts);\n\t\tconst parsedContacts = JSON.parse(contacts);\n\t\tconsole.log(\"DidMount parsedContacts\", parsedContacts);\n\n\t\tif (parsedContacts && parsedContacts.length > 0) {\n\t\t\tthis.setState({ contacts: [...parsedContacts] });\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tconst nextContacts = this.state.contacts;\n\t\t// const prevContacts = prevState.contacts;\n\n\t\t// if (nextContacts !== prevContacts) {\n\t\t\tlocalStorage.setItem(\"сontacts\", JSON.stringify(nextContacts));\n\t\t// }\n\t}\n\n\taddContact = () => {\n\t\tif (\n\t\t\tthis.state.contacts.find((contact) => {\n\t\t\t\treturn contact.name === this.state.name;\n\t\t\t})\n\t\t) {\n\t\t\talert(`${this.state.name} is already in contacts!`);\n\t\t} else {\n\t\t\tconst newContact = {\n\t\t\t\tid: uuidv4(),\n\t\t\t\tname: this.state.name,\n\t\t\t\tphoneNumber: this.state.phoneNumber,\n\t\t\t};\n\t\t\tthis.setState(({ contacts }) => ({\n\t\t\t\tcontacts: [newContact, ...contacts],\n\t\t\t}));\n\t\t}\n\t};\n\n\tdelContact = (e) => {\n\t\tconst elementToDel = this.state.contacts.find(\n\t\t\t(item) => item.id === e.target.id\n\t\t);\n\t\tconst index = this.state.contacts.indexOf(elementToDel);\n\t\tthis.state.contacts.splice(index, 1);\n\t\tthis.setState({ contacts: [...this.state.contacts] });\n\t};\n\n\tnameChange = (e) => {\n\t\treturn this.setState({ name: e.target.value });\n\t};\n\n\tphoneChange = (e) => {\n\t\treturn this.setState({ phoneNumber: e.target.value });\n\t};\n\n\tfilterFunc = (e) => {\n\t\treturn this.setState({ filter: e.target.value });\n\t};\n\n\tgetFilteredElems = () => {\n\t\tconst normalizedElem = this.state.filter.toLowerCase();\n\t\tconst stateNormElems = this.state.contacts.filter((elem) => {\n\t\t\treturn elem.name.toLowerCase().includes(normalizedElem);\n\t\t});\n\t\treturn stateNormElems;\n\t};\n\n\trender() {\n\t\tconst filteredContact = this.getFilteredElems();\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<ContactForm\n\t\t\t\t\taddContact={this.addContact}\n\t\t\t\t\tnameChange={this.nameChange}\n\t\t\t\t\tphoneChange={this.phoneChange}\n\t\t\t\t/>\n\t\t\t\t<Filter filter={this.filterFunc} />\n\t\t\t\t<ContactList contacts={filteredContact} delContact={this.delContact} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}